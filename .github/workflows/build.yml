name: Build static Qt

on:
  push:
    tags:
#      - '*-*' # Only tags with build number
permissions:
  contents: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest ]
        #        os: [ windows-latest, macos-latest ]
        include:
          - os: windows-latest
            os-caption: windows
    #          - os: macos-latest
    #            os-caption: macos

    runs-on: ${{matrix.os}}

    env:
      QT_VERSION: dev

    steps:
      - uses: seanmiddleditch/gha-setup-ninja@v5


      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'  # 指定 Python 版本

      - name: Install Python dependencies
        run: |
          pip install html5lib
          # 安装其他依赖，增加需要的 Python 包

      - name: Install LLVM and Clang
        run: |
          choco install llvm  

      - name: Install flex, bison, gperf
        run: |
          choco install flex
          choco install bison
          choco install gperf

      - name: Clone Qt repo
        run: |
          git clone --recursive https://code.qt.io/qt/qt5.git qt -b '${{env.QT_VERSION}}'
          cd qt
          perl init-repository.pl -f --module-subset=all,-qtopcua

      - name: Set up MSVC
        uses: ilammy/msvc-dev-cmd@v1
        if: contains(matrix.os, 'windows')

      - name: Build Qt (Windows)
        if: contains(matrix.os, 'windows')
        env:
          CL: /MP # Build with multiple processes   todo -DBUILD_qtwebengine=ON
        run: |
          mkdir qt_build                                         
          cd qt_build                                           
          ..\qt\configure.bat -prefix "..\qt_static" -release -static -static-runtime -optimize-size -opensource  -make examples -opengl  -no-pch -linker lld -install-examples-sources -examplesdir "..\qt_static\examples" -no-openssl -- -DBUILD_qtwebengine=ON
          cmake --build . --parallel 4                         
          cmake --install .                                     

      - name: Build Qt (macOS)
        if: contains(matrix.os, 'macos')
        run: |
          mkdir qt_build
          cd qt_build
          ../qt/configure -static -static-runtime -release -optimize-size -prefix "../qt_static" -no-feature-accessibility -- -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64"
          cmake --build . --parallel 3
          cmake --install .

      - name: Package binaries
        run: |
          7z a qt-${{env.QT_VERSION}}-static-${{matrix.os-caption}}.zip qt_static

      - uses: actions/upload-artifact@v4
        with:
          name: qt-static-${{matrix.os-caption}}
          path: qt-*.zip

